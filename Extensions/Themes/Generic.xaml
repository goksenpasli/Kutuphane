<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:local="clr-namespace:Extensions"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">
    <SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3" />
    <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9" />
    <SolidColorBrush x:Key="ScrollBar.Static.Background" Color="#F0F0F0" />
    <SolidColorBrush x:Key="ScrollBar.Static.Border" Color="#F0F0F0" />
    <SolidColorBrush x:Key="ScrollBar.Pressed.Glyph" Color="#FFFFFF" />
    <SolidColorBrush x:Key="ScrollBar.MouseOver.Glyph" Color="#000000" />
    <SolidColorBrush x:Key="ScrollBar.Disabled.Glyph" Color="#BFBFBF" />
    <SolidColorBrush x:Key="ScrollBar.Static.Glyph" Color="#606060" />
    <SolidColorBrush x:Key="ScrollBar.MouseOver.Background" Color="#DADADA" />
    <SolidColorBrush x:Key="ScrollBar.MouseOver.Border" Color="#DADADA" />
    <SolidColorBrush x:Key="ScrollBar.Pressed.Background" Color="#606060" />
    <SolidColorBrush x:Key="ScrollBar.Pressed.Border" Color="#606060" />
    <SolidColorBrush x:Key="ScrollBar.Disabled.Background" Color="#F0F0F0" />
    <SolidColorBrush x:Key="ScrollBar.Disabled.Border" Color="#F0F0F0" />
    <SolidColorBrush x:Key="ScrollBar.MouseOver.Thumb" Color="#A6A6A6" />
    <SolidColorBrush x:Key="ScrollBar.Pressed.Thumb" Color="#606060" />
    <SolidColorBrush x:Key="ScrollBar.Static.Thumb" Color="#CDCDCD" />
    <StreamGeometry x:Key="ArrowGeometry">M0,0L4,4 8,0z</StreamGeometry>
    <local:SystemFileIconConverter x:Key="SystemFileIconConverter" />
    <local:NullableToBooleanConverter x:Key="NullableToBooleanConverter" />
    <Style x:Key="RightRepeatButton" TargetType="RepeatButton">
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border Height="5"
                        Background="Red" BorderBrush="Gray" BorderThickness="0,1,1,1"
                        CornerRadius="0.5" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LeftRepeatButton" TargetType="RepeatButton">
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border Height="5"
                        Background="#FFE22828" BorderBrush="Gray" BorderThickness="1,1,0,1"
                        CornerRadius="0.5" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SliderThumb" TargetType="Thumb">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Ellipse Width="16" Height="16"
                        Stroke="Gray" StrokeThickness="1"
                        Fill="Blue" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="Slider" TargetType="Slider">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Track x:Name="PART_Track" Grid.Row="1">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="Slider.DecreaseLarge" Style="{StaticResource LeftRepeatButton}" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource SliderThumb}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="Slider.IncreaseLarge" Style="{StaticResource RightRepeatButton}" />
                </Track.IncreaseRepeatButton>
            </Track>
        </Grid>
    </ControlTemplate>
    <Style x:Key="Horizontal_Slider" TargetType="Slider">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="UseLayoutRounding" Value="False" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="MinHeight" Value="21" />
                <Setter Property="Template" Value="{StaticResource Slider}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="NumericUpdownTextBoxStyle" TargetType="{x:Type TextBox}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ShowMode, RelativeSource={RelativeSource TemplatedParent}}" Value="CurrencyMode">
                <Setter Property="Text" Value="{Binding Value, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, StringFormat=\{0:C\}, UpdateSourceTrigger=PropertyChanged}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ShowMode, RelativeSource={RelativeSource TemplatedParent}}" Value="DateTimeMode">
                <Setter Property="Text" Value="{Binding DateValue, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ShowMode, RelativeSource={RelativeSource TemplatedParent}}" Value="NumberMode">
                <Setter Property="Text" Value="{Binding Value, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ProgressBarStyle" TargetType="{x:Type ProgressBar}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="#888888" />
        <Setter Property="Foreground" Value="Green" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Border x:Name="PART_Track"
                        MinHeight="14"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        ClipToBounds="True" CornerRadius="2">
                        <Border x:Name="PART_Indicator"
                            Background="{TemplateBinding Foreground}"
                            BorderBrush="{x:Null}"
                            Margin="1" HorizontalAlignment="Left"
                            CornerRadius="1" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter TargetName="PART_Track" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="True">
                            <Setter TargetName="PART_Indicator" Property="Background" Value="Red" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation AutoReverse="False" RepeatBehavior="Forever"
                                            Storyboard.TargetName="PART_Indicator" Storyboard.TargetProperty="Margin" From="-40,1,1,1" To="40,1,1,1"
                                            Duration="0:0:2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="local:ImageViewer">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:ImageViewer">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                            <Image RenderTransformOrigin="0.5,0.5" ScrollViewer.CanContentScroll="True"
                                Source="{Binding Source, RelativeSource={RelativeSource TemplatedParent}}"
                                Stretch="None">
                                <Image.LayoutTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="{Binding Zoom, RelativeSource={RelativeSource TemplatedParent}}" ScaleY="{Binding Zoom, RelativeSource={RelativeSource TemplatedParent}}" />
                                        <RotateTransform Angle="{Binding Angle, RelativeSource={RelativeSource TemplatedParent}}" />
                                    </TransformGroup>
                                </Image.LayoutTransform>
                            </Image>
                        </ScrollViewer>
                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Button Visibility="{Binding OpenButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}" Command="{Binding DosyaAç, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}">
                                <Button.Content>
                                    <Image Width="16" Height="16">
                                        <Image.Source>
                                            <MultiBinding Converter="{StaticResource SystemFileIconConverter}">
                                                <Binding Source="Shell32.dll" />
                                                <Binding Source="3" />
                                            </MultiBinding>
                                        </Image.Source>
                                    </Image>
                                </Button.Content>
                            </Button>
                            <StackPanel Grid.Column="1" Visibility="{Binding TifNavigasyonButtonEtkin, RelativeSource={RelativeSource TemplatedParent}}" Orientation="Horizontal">
                                <RepeatButton Command="{Binding ViewerBack, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ToolTip="Önceki Sayfa">
                                    <Image Width="16" Height="16">
                                        <Image.Source>
                                            <MultiBinding Converter="{StaticResource SystemFileIconConverter}">
                                                <Binding Source="Shell32.dll" />
                                                <Binding Source="246" />
                                            </MultiBinding>
                                        </Image.Source>
                                    </Image>
                                </RepeatButton>
                                <ComboBox ItemsSource="{Binding Pages, RelativeSource={RelativeSource TemplatedParent}}" SelectedItem="{Binding Sayfa, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <ComboBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel />
                                        </ItemsPanelTemplate>
                                    </ComboBox.ItemsPanel>
                                </ComboBox>
                                <RepeatButton Command="{Binding ViewerNext, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ToolTip="Sonraki Sayfa">
                                    <Image Width="16" Height="16">
                                        <Image.Source>
                                            <MultiBinding Converter="{StaticResource SystemFileIconConverter}">
                                                <Binding Source="Shell32.dll" />
                                                <Binding Source="247" />
                                            </MultiBinding>
                                        </Image.Source>
                                    </Image>
                                </RepeatButton>
                            </StackPanel>
                            <Button Grid.Column="2" Command="{Binding Yazdır, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}">
                                <Button.Content>
                                    <Image Width="16" Height="16">
                                        <Image.Source>
                                            <MultiBinding Converter="{StaticResource SystemFileIconConverter}">
                                                <Binding Source="Shell32.dll" />
                                                <Binding Source="16" />
                                            </MultiBinding>
                                        </Image.Source>
                                    </Image>
                                </Button.Content>
                            </Button>
                            <Slider Grid.Column="3"
                                IsEnabled="{Binding Source, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullableToBooleanConverter}}"
                                Margin="2"
                                Style="{StaticResource Horizontal_Slider}"
                                AutoToolTipPlacement="TopLeft" Minimum="0.01" SmallChange="1"
                                Value="{Binding Zoom, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Slider Grid.Column="4"
                                IsEnabled="{Binding Source, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullableToBooleanConverter}}"
                                Margin="2"
                                Style="{StaticResource Horizontal_Slider}"
                                AutoToolTipPlacement="TopLeft" IsSnapToTickEnabled="False" Maximum="360" SmallChange="1"
                                Value="{Binding Angle, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="local:MaskedTextBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ScrollViewer x:Name="PART_ContentHost"
                                Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
                            <Border Grid.Column="1"
                                Visibility="{Binding ClearButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                                <TextBlock FontWeight="Bold"><Hyperlink Command="{Binding Reset, RelativeSource={RelativeSource TemplatedParent}}">
                                        <Run Text="X" />
                                    </Hyperlink></TextBlock>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF7EB4EA" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF569DE5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="local:SplitButton">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:SplitButton">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="14" />
                        </Grid.ColumnDefinitions>
                        <Button x:Name="btn" Content="{TemplateBinding Content}"
                            Grid.Column="0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            Command="{TemplateBinding Command}"
                            CommandParameter="{TemplateBinding CommandParameter}"
                            IsTabStop="{TemplateBinding IsTabStop}" />
                        <ToggleButton x:Name="Tb"
                            Grid.Column="1"
                            IsEnabled="{TemplateBinding SplitContentPartIsEnabled}"
                            IsTabStop="{TemplateBinding IsTabStop}">
                            <Path x:Name="path"
                                HorizontalAlignment="Center" VerticalAlignment="Center"
                                Data="{StaticResource ArrowGeometry}"
                                Focusable="False">
                                <Path.Style>
                                    <Style TargetType="Path">
                                        <Setter Property="Fill" Value="Black" />
                                        <Style.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Fill" Value="#FF838383" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Path.Style>
                            </Path>
                        </ToggleButton>
                        <Popup x:Name="PART_Popup"
                            Grid.ColumnSpan="2"
                            AllowsTransparency="True" Focusable="False"
                            IsOpen="{Binding IsChecked, ElementName=Tb}"
                            Placement="{TemplateBinding PlacementMode}"
                            PopupAnimation="Slide"
                            StaysOpen="{TemplateBinding StayOpen}">
                            <ContentPresenter Content="{TemplateBinding InternalContent}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="btn" Property="Background" Value="#F4F4F4" />
                            <Setter TargetName="btn" Property="BorderBrush" Value="#ADB2B5" />
                        </Trigger>
                        <Trigger SourceName="PART_Popup" Property="IsOpen" Value="true">
                            <Setter Property="IsEnabled" Value="False" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource {x:Type ToggleButton}}" TargetType="local:ContentToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:ContentToggleButton">
                    <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}">
                        <Grid>
                            <ContentPresenter Content="{TemplateBinding OverContent}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False" RecognizesAccessKey="True" />
                            <Popup AllowsTransparency="True"
                                IsOpen="{Binding IsChecked, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}"
                                Placement="{TemplateBinding PlacementMode}"
                                PlacementTarget="{Binding RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}"
                                PopupAnimation="Slide"
                                StaysOpen="{Binding StaysOpen, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}">
                                <ContentPresenter Content="{TemplateBinding Content}" />
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#ADADAD" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="local:TimePicker">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <ComboBox Text="{Binding TimeValue, RelativeSource={RelativeSource TemplatedParent}}"
                        ItemsSource="{Binding Saatler, RelativeSource={RelativeSource TemplatedParent}}"
                        IsEditable="True"
                        ItemContainerStyle="{TemplateBinding ItemContainerStyle}"
                        ItemContainerStyleSelector="{TemplateBinding ItemContainerStyleSelector}"
                        ItemTemplate="{TemplateBinding ItemTemplate}"
                        ItemTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                        ItemsPanel="{TemplateBinding ItemsPanel}">
                        <ComboBox.Template>
                            <ControlTemplate TargetType="{x:Type ComboBox}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
                                    </Grid.ColumnDefinitions>
                                    <ToggleButton Grid.Column="2"
                                        ClickMode="Press" Focusable="false"
                                        IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                        <Path HorizontalAlignment="Center" VerticalAlignment="Center"
                                            Data="{StaticResource ArrowGeometry}"
                                            Fill="Black" RenderTransformOrigin="0.5,0.5">
                                            <Path.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform />
                                                    <SkewTransform />
                                                    <RotateTransform Angle="-90" />
                                                    <TranslateTransform />
                                                </TransformGroup>
                                            </Path.RenderTransform>
                                        </Path>
                                    </ToggleButton>
                                    <Popup x:Name="PART_Popup"
                                        Grid.ColumnSpan="2"
                                        Focusable="False"
                                        IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                        Placement="Right" PopupAnimation="Slide">
                                        <Border Height="{TemplateBinding MaxDropDownHeight}"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="1">
                                            <ScrollViewer>
                                                <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                            </ScrollViewer>
                                        </Border>
                                    </Popup>
                                    <local:MaskedTextBox x:Name="PART_EditableTextBox"
                                        VerticalAlignment="Center"
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                        ClearButtonVisibility="{Binding ClearButtonVisible, RelativeSource={RelativeSource AncestorType={x:Type local:TimePicker}}}"
                                        IncludePrompt="False" Mask="00:00" PromptChar="_" />
                                </Grid>
                            </ControlTemplate>
                        </ComboBox.Template>
                    </ComboBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
    </Style>
    <ControlTemplate x:Key="HorizontalNumericUpDown" TargetType="{x:Type ScrollBar}">
        <Grid SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="9.5" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="9.5" />
            </Grid.ColumnDefinitions>
            <TextBox Grid.Row="0" Grid.Column="1"
                IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                MinWidth="18"
                Background="{TemplateBinding Background}"
                BorderThickness="1"
                VerticalContentAlignment="Center"
                Style="{StaticResource NumericUpdownTextBoxStyle}" />
            <RepeatButton x:Name="PART_LineUpButton"
                Grid.Row="0" Grid.Column="0"
                Visibility="{Binding NumericUpDownButtonsVisibility, RelativeSource={RelativeSource TemplatedParent}}"
                Command="{x:Static ScrollBar.LineLeftCommand}"
                Style="{StaticResource ScrollBarButton}">
                <RepeatButton.Background>
                    <VisualBrush Stretch="Uniform">
                        <VisualBrush.Visual>
                            <Path x:Name="Up"
                                Width="9.5" Height="8.5"
                                StrokeLineJoin="Round"
                                Data="M0,0L5,5 10,0z" Fill="Black" RenderTransformOrigin="0.5,0.5" Stretch="Fill">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="90" />
                                </Path.RenderTransform>
                            </Path>
                        </VisualBrush.Visual>
                    </VisualBrush>
                </RepeatButton.Background>
            </RepeatButton>
            <RepeatButton x:Name="PART_LineDownButton"
                Grid.Row="1" Grid.Column="2"
                Visibility="{Binding NumericUpDownButtonsVisibility, RelativeSource={RelativeSource TemplatedParent}}"
                Command="{x:Static ScrollBar.LineRightCommand}"
                Style="{StaticResource ScrollBarButton}">
                <RepeatButton.Background>
                    <VisualBrush Stretch="Uniform">
                        <VisualBrush.Visual>
                            <Path x:Name="Down"
                                Width="9.5" Height="8.5"
                                StrokeLineJoin="Round"
                                Data="M0,0L5,5 10,0z" Fill="Black" RenderTransformOrigin="0.5,0.5" Stretch="Fill">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="-90" />
                                </Path.RenderTransform>
                            </Path>
                        </VisualBrush.Visual>
                    </VisualBrush>
                </RepeatButton.Background>
            </RepeatButton>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Up" Property="Stroke" Value="Gray" />
                <Setter TargetName="Down" Property="Stroke" Value="Gray" />
                <Setter TargetName="Up" Property="Fill" Value="Gray" />
                <Setter TargetName="Down" Property="Fill" Value="Gray" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="VerticalNumericUpDown" TargetType="{x:Type ScrollBar}">
        <Grid SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="9.5" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <TextBox Grid.Row="0" Grid.Column="0" Grid.RowSpan="2"
                IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                MinWidth="18"
                Background="{TemplateBinding Background}"
                BorderThickness="1"
                VerticalContentAlignment="Center"
                Style="{StaticResource NumericUpdownTextBoxStyle}" />
            <RepeatButton x:Name="PART_LineUpButton"
                Grid.Row="0" Grid.Column="1"
                Visibility="{Binding NumericUpDownButtonsVisibility, RelativeSource={RelativeSource TemplatedParent}}"
                Command="{x:Static ScrollBar.LineDownCommand}"
                Style="{StaticResource ScrollBarButton}">
                <RepeatButton.Background>
                    <VisualBrush Stretch="Uniform">
                        <VisualBrush.Visual>
                            <Path x:Name="Up"
                                Width="9.5" Height="8.5"
                                StrokeLineJoin="Round"
                                Data="M0,0L5,5 10,0z" Fill="Black" RenderTransformOrigin="0.5,0.5" Stretch="Fill">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="-180" />
                                </Path.RenderTransform>
                            </Path>
                        </VisualBrush.Visual>
                    </VisualBrush>
                </RepeatButton.Background>
            </RepeatButton>
            <RepeatButton x:Name="PART_LineDownButton"
                Grid.Row="1" Grid.Column="1"
                Visibility="{Binding NumericUpDownButtonsVisibility, RelativeSource={RelativeSource TemplatedParent}}"
                Command="{x:Static ScrollBar.LineUpCommand}"
                Style="{StaticResource ScrollBarButton}">
                <RepeatButton.Background>
                    <VisualBrush Stretch="Uniform">
                        <VisualBrush.Visual>
                            <Path x:Name="Down"
                                Width="9.5" Height="8.5"
                                StrokeLineJoin="Round"
                                Data="M0,0L5,5 10,0z" Fill="Black" RenderTransformOrigin="0.5,0.5" Stretch="Fill" />
                        </VisualBrush.Visual>
                    </VisualBrush>
                </RepeatButton.Background>
            </RepeatButton>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Up" Property="Stroke" Value="Gray" />
                <Setter TargetName="Down" Property="Stroke" Value="Gray" />
                <Setter TargetName="Up" Property="Fill" Value="Gray" />
                <Setter TargetName="Down" Property="Fill" Value="Gray" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style TargetType="local:NumericUpDownControl">
        <Setter Property="Background" Value="White" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Template" Value="{StaticResource HorizontalNumericUpDown}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Template" Value="{StaticResource VerticalNumericUpDown}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="local:HorizontalListBox">
        <Setter Property="Background" Value="{StaticResource ListBox.Static.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Border}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="ItemsPanel" Value="{DynamicResource HorizontalItemsPanelTemplate}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:HorizontalListBox}">
                    <Border x:Name="Bd"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="1"
                        SnapsToDevicePixels="true">
                        <ScrollViewer Padding="{TemplateBinding Padding}" Focusable="false" Template="{DynamicResource HorizontalScrollViewerControlTemplate}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource ListBox.Disabled.Background}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ListBox.Disabled.Border}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true" />
                                <!--<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />-->
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ItemsPanelTemplate x:Key="HorizontalItemsPanelTemplate">
        <VirtualizingStackPanel IsItemsHost="True" Orientation="Horizontal" />
    </ItemsPanelTemplate>
    <ControlTemplate x:Key="HorizontalScrollViewerControlTemplate" TargetType="{x:Type ScrollViewer}">
        <Grid x:Name="Grid" Background="{TemplateBinding Background}">
            <ScrollBar x:Name="PART_HorizontalScrollBar"
                Grid.Row="0" Grid.Column="0"
                Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                Height="{TemplateBinding ViewportHeight}"
                Style="{DynamicResource HorizontalScrollBarStyle}"
                AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow"
                Maximum="{TemplateBinding ScrollableWidth}"
                Minimum="0" Orientation="Horizontal"
                ViewportSize="{TemplateBinding ViewportWidth}"
                Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Content="{TemplateBinding Content}"
                Grid.Row="0" Grid.RowSpan="2"
                Margin="25,0"
                CanContentScroll="{TemplateBinding CanContentScroll}"
                CanHorizontallyScroll="False" CanVerticallyScroll="False"
                ContentTemplate="{TemplateBinding ContentTemplate}" />
        </Grid>
    </ControlTemplate>
    <Style x:Key="HorizontalScrollBarStyle" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Background" Value="{StaticResource ScrollBar.Static.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource ScrollBar.Static.Border}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
        <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
        <Setter Property="BorderThickness" Value="0,1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                            <ColumnDefinition Width="0.00001*" />
                            <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                        </Grid.ColumnDefinitions>
                        <RepeatButton x:Name="PART_LineLeftButton" IsEnabled="{TemplateBinding IsMouseOver}" Command="{x:Static ScrollBar.LineLeftCommand}">
                            <Path x:Name="ArrowLeft"
                                Margin="3"
                                Data="M 3.18,7 C3.18,7 5,7 5,7 5,7 1.81,3.5 1.81,3.5 1.81,3.5 5,0 5,0 5,0 3.18,0 3.18,0 3.18,0 0,3.5 0,3.5 0,3.5 3.18,7 3.18,7 z"
                                Fill="{StaticResource ScrollBar.Static.Glyph}"
                                Stretch="Uniform" />
                        </RepeatButton>
                        <RepeatButton x:Name="PART_LineRightButton"
                            Grid.Column="2"
                            IsEnabled="{TemplateBinding IsMouseOver}"
                            Command="{x:Static ScrollBar.LineRightCommand}">
                            <Path x:Name="ArrowRight"
                                Margin="3"
                                Data="M 1.81,7 C1.81,7 0,7 0,7 0,7 3.18,3.5 3.18,3.5 3.18,3.5 0,0 0,0 0,0 1.81,0 1.81,0 1.81,0 5,3.5 5,3.5 5,3.5 1.81,7 1.81,7 z"
                                Fill="{StaticResource ScrollBar.Static.Glyph}"
                                Stretch="Uniform" />
                        </RepeatButton>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ArrowRight" Property="Fill" Value="{StaticResource ScrollBar.Pressed.Glyph}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ArrowLeft" Property="Fill" Value="{StaticResource ScrollBar.Pressed.Glyph}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ArrowRight" Property="Fill" Value="{StaticResource ScrollBar.MouseOver.Glyph}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ArrowLeft" Property="Fill" Value="{StaticResource ScrollBar.MouseOver.Glyph}" />
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="ArrowLeft" Property="Fill" Value="{StaticResource ScrollBar.Disabled.Glyph}" />
                            <Setter TargetName="ArrowRight" Property="Fill" Value="{StaticResource ScrollBar.Disabled.Glyph}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="local:Resizer">
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:Resizer">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0,1,1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="local:ResizablePanel">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush MappingMode="RelativeToBoundingBox" StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Offset="1" Color="#FE00B6E8" />
                    <GradientStop Color="#FF48F3CA" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:ResizablePanel">
                    <Grid Background="{TemplateBinding Background}" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="3" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="3" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="3" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="3" />
                        </Grid.RowDefinitions>
                        <local:Resizer Grid.Row="0" Grid.Column="0"
                            Width="2" Height="2"
                            Cursor="SizeNWSE" ThumbDirection="TopLeft" />
                        <local:Resizer Grid.Row="1" Grid.Column="0"
                            Width="2"
                            Cursor="SizeWE" ThumbDirection="Left" />
                        <local:Resizer Grid.Row="2" Grid.Column="0"
                            Width="2" Height="2"
                            Cursor="SizeNESW" ThumbDirection="BottomLeft" />
                        <local:Resizer Grid.Row="2" Grid.Column="1"
                            Height="2"
                            Cursor="SizeNS" ThumbDirection="Bottom" />
                        <local:Resizer Grid.Row="2" Grid.Column="2"
                            Width="2" Height="2"
                            Cursor="SizeNWSE" ThumbDirection="BottomRight" />
                        <local:Resizer Grid.Row="1" Grid.Column="2"
                            Width="2"
                            Cursor="SizeWE" ThumbDirection="Right" />
                        <local:Resizer Grid.Row="0" Grid.Column="2"
                            Width="2" Height="2"
                            Cursor="SizeNESW" ThumbDirection="TopRight" />
                        <local:Resizer Grid.Row="0" Grid.Column="1"
                            Height="2"
                            Cursor="SizeNS" ThumbDirection="Top" />
                        <ContentPresenter Content="{TemplateBinding Content}"
                            Grid.Row="1" Grid.Column="1"
                            Margin="{TemplateBinding Padding}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="local:GraphControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:GraphControl">
                    <Grid>
                        <local:ContentToggleButton Width="16" Height="16"
                            Background="{x:Null}"
                            HorizontalAlignment="Left" VerticalAlignment="Top">
                            <local:ContentToggleButton.OverContent>
                                <TextBlock Text="N" FontFamily="Webdings" />
                            </local:ContentToggleButton.OverContent>
                            <local:ContentToggleButton.Content>
                                <ItemsControl Width="250" Height="250"
                                    ItemsSource="{TemplateBinding Series}"
                                    ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Auto"
                                    VirtualizingStackPanel.IsVirtualizing="True">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock>
                                                <Run Text="{Binding Description, Mode=OneWay}" Foreground="{Binding ChartBrush, Mode=OneWay}" />
                                                <Run Text="{Binding ChartValue, Mode=OneWay}" Foreground="Black" />
                                            </TextBlock>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.Template>
                                        <ControlTemplate TargetType="ItemsControl">
                                            <ScrollViewer Padding="{TemplateBinding Padding}">
                                                <ItemsPresenter />
                                            </ScrollViewer>
                                        </ControlTemplate>
                                    </ItemsControl.Template>
                                </ItemsControl>
                            </local:ContentToggleButton.Content>
                        </local:ContentToggleButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>